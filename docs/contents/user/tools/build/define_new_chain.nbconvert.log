
[NbConvertApp] Converting notebook contents/user/tools/build/define_new_chain.ipynb to notebook
Traceback (most recent call last):
  File "/conda/miniconda3/envs/MolSysMT@uibcdf_3.12/bin/jupyter-nbconvert", line 10, in <module>
    sys.exit(main())
             ^^^^^^
  File "/conda/miniconda3/envs/MolSysMT@uibcdf_3.12/lib/python3.12/site-packages/jupyter_core/application.py", line 283, in launch_instance
    super().launch_instance(argv=argv, **kwargs)
  File "/conda/miniconda3/envs/MolSysMT@uibcdf_3.12/lib/python3.12/site-packages/traitlets/config/application.py", line 1075, in launch_instance
    app.start()
  File "/conda/miniconda3/envs/MolSysMT@uibcdf_3.12/lib/python3.12/site-packages/nbconvert/nbconvertapp.py", line 420, in start
    self.convert_notebooks()
  File "/conda/miniconda3/envs/MolSysMT@uibcdf_3.12/lib/python3.12/site-packages/nbconvert/nbconvertapp.py", line 597, in convert_notebooks
    self.convert_single_notebook(notebook_filename)
  File "/conda/miniconda3/envs/MolSysMT@uibcdf_3.12/lib/python3.12/site-packages/nbconvert/nbconvertapp.py", line 563, in convert_single_notebook
    output, resources = self.export_single_notebook(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/conda/miniconda3/envs/MolSysMT@uibcdf_3.12/lib/python3.12/site-packages/nbconvert/nbconvertapp.py", line 487, in export_single_notebook
    output, resources = self.exporter.from_filename(
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/conda/miniconda3/envs/MolSysMT@uibcdf_3.12/lib/python3.12/site-packages/nbconvert/exporters/exporter.py", line 201, in from_filename
    return self.from_file(f, resources=resources, **kw)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/conda/miniconda3/envs/MolSysMT@uibcdf_3.12/lib/python3.12/site-packages/nbconvert/exporters/exporter.py", line 220, in from_file
    return self.from_notebook_node(
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/conda/miniconda3/envs/MolSysMT@uibcdf_3.12/lib/python3.12/site-packages/nbconvert/exporters/notebook.py", line 36, in from_notebook_node
    nb_copy, resources = super().from_notebook_node(nb, resources, **kw)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/conda/miniconda3/envs/MolSysMT@uibcdf_3.12/lib/python3.12/site-packages/nbconvert/exporters/exporter.py", line 154, in from_notebook_node
    nb_copy, resources = self._preprocess(nb_copy, resources)
                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/conda/miniconda3/envs/MolSysMT@uibcdf_3.12/lib/python3.12/site-packages/nbconvert/exporters/exporter.py", line 353, in _preprocess
    nbc, resc = preprocessor(nbc, resc)
                ^^^^^^^^^^^^^^^^^^^^^^^
  File "/conda/miniconda3/envs/MolSysMT@uibcdf_3.12/lib/python3.12/site-packages/nbconvert/preprocessors/base.py", line 48, in __call__
    return self.preprocess(nb, resources)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/conda/miniconda3/envs/MolSysMT@uibcdf_3.12/lib/python3.12/site-packages/nbconvert/preprocessors/execute.py", line 103, in preprocess
    self.preprocess_cell(cell, resources, index)
  File "/conda/miniconda3/envs/MolSysMT@uibcdf_3.12/lib/python3.12/site-packages/nbconvert/preprocessors/execute.py", line 124, in preprocess_cell
    cell = self.execute_cell(cell, index, store_history=True)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/conda/miniconda3/envs/MolSysMT@uibcdf_3.12/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/conda/miniconda3/envs/MolSysMT@uibcdf_3.12/lib/python3.12/asyncio/base_events.py", line 691, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/conda/miniconda3/envs/MolSysMT@uibcdf_3.12/lib/python3.12/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/conda/miniconda3/envs/MolSysMT@uibcdf_3.12/lib/python3.12/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
molsys = msm.convert(molsys)
------------------


[31m---------------------------------------------------------------------------[39m
[31mFileNotFoundError[39m                         Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[3][39m[32m, line 1[39m
[32m----> [39m[32m1[39m molsys = [43mmsm[49m[43m.[49m[43mconvert[49m[43m([49m[43mmolsys[49m[43m)[49m

[36mFile [39m[32m~/repos@uibcdf/molsysmt/molsysmt/_private/digestion/digest.py:122[39m, in [36mdigest.<locals>.digestor.<locals>.wrapper[39m[34m(*args, **kwargs)[39m
[32m    120[39m     [38;5;28;01mreturn[39;00m func(all_args[[33m'[39m[33mself[39m[33m'[39m], **final_args)
[32m    121[39m [38;5;28;01melse[39;00m:
[32m--> [39m[32m122[39m     [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[43m*[49m[43m*[49m[43mfinal_args[49m[43m)[49m

[36mFile [39m[32m~/repos@uibcdf/molsysmt/molsysmt/basic/convert.py:508[39m, in [36mconvert[39m[34m(molecular_system, to_form, selection, structure_indices, syntax, skip_digestion, **kwargs)[39m
[32m    506[39m [38;5;66;03m# If one to one[39;00m
[32m    507[39m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28misinstance[39m(from_form, ([38;5;28mlist[39m, [38;5;28mtuple[39m)):
[32m--> [39m[32m508[39m     output = [43m_convert_one_to_one[49m[43m([49m[43mmolecular_system[49m[43m,[49m[43m [49m[43mfrom_form[49m[43m,[49m[43m [49m[43mto_form[49m[43m=[49m[43mto_form[49m[43m,[49m[43m [49m[43mselection[49m[43m=[49m[43mselection[49m[43m,[49m[43m [49m[43mstructure_indices[49m[43m=[49m[43mstructure_indices[49m[43m,[49m
[32m    509[39m [43m            [49m[43msyntax[49m[43m=[49m[43msyntax[49m[43m,[49m[43m [49m[43mskip_digestion[49m[43m=[49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m
[32m    511[39m [38;5;66;03m# If multiple to one[39;00m
[32m    512[39m 
[32m    513[39m [38;5;28;01melse[39;00m:
[32m    514[39m 
[32m    515[39m     [38;5;66;03m# conversions in private shortcuts[39;00m
[32m    516[39m     [38;5;28;01mif[39;00m [38;5;28mtuple[39m([38;5;28msorted[39m(from_form)) [38;5;129;01min[39;00m _multiple_conversion_shortcuts:

[36mFile [39m[32m~/repos@uibcdf/molsysmt/molsysmt/basic/convert.py:86[39m, in [36m_convert_one_to_one[39m[34m(molecular_system, from_form, to_form, selection, structure_indices, syntax, **kwargs)[39m
[32m     83[39m         [38;5;28;01mif[39;00m [38;5;28mlen[39m(missing_arguments)>[32m0[39m:
[32m     84[39m             [38;5;28;01mraise[39;00m NotCompatibleConversionError(from_form, to_form, missing_arguments)
[32m---> [39m[32m86[39m     output = [43mfunction[49m[43m([49m[43mmolecular_system[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mconversion_arguments[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m
[32m     88[39m [38;5;28;01melif[39;00m ([33m'[39m[33mmolsysmt.MolSys[39m[33m'[39m [38;5;129;01min[39;00m _dict_modules[from_form]._convert_to) [38;5;129;01mand[39;00m (to_form [38;5;129;01min[39;00m _dict_modules[[33m'[39m[33mmolsysmt.MolSys[39m[33m'[39m]._convert_to):
[32m     90[39m     output = _convert_one_to_one(molecular_system, from_form, to_form=[33m'[39m[33mmolsysmt.MolSys[39m[33m'[39m, selection=selection,
[32m     91[39m             structure_indices=structure_indices, syntax=syntax, **kwargs)

[36mFile [39m[32m~/repos@uibcdf/molsysmt/molsysmt/_private/digestion/digest.py:52[39m, in [36mdigest.<locals>.digestor.<locals>.wrapper[39m[34m(*args, **kwargs)[39m
[32m     48[39m [38;5;129m@functools[39m.wraps(func)
[32m     49[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mwrapper[39m(*args, **kwargs):
[32m     51[39m     [38;5;28;01mif[39;00m kwargs.get([33m'[39m[33mskip_digestion[39m[33m'[39m, [38;5;28;01mFalse[39;00m):
[32m---> [39m[32m52[39m         [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[43m*[49m[43margs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m
[32m     54[39m     [38;5;66;03m# Define caller[39;00m
[32m     56[39m     caller = func.[34m__module__[39m+[33m'[39m[33m.[39m[33m'[39m+func.[34m__name__[39m

[36mFile [39m[32m~/repos@uibcdf/molsysmt/molsysmt/form/file_mmtf/to_molsysmt_MolSys.py:9[39m, in [36mto_molsysmt_MolSys[39m[34m(item, atom_indices, structure_indices, skip_digestion)[39m
[32m      6[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01m.[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m to_mmtf_MMTFDecoder
[32m      7[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01m.[39;00m[34;01m.[39;00m[34;01mmmtf_MMTFDecoder[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m to_molsysmt_MolSys [38;5;28;01mas[39;00m mmtf_MMTFDecoder_to_molsysmt_MolSys
[32m----> [39m[32m9[39m tmp_item = [43mto_mmtf_MMTFDecoder[49m[43m([49m[43mitem[49m[43m,[49m[43m [49m[43mskip_digestion[49m[43m=[49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m
[32m     10[39m tmp_item = mmtf_MMTFDecoder_to_molsysmt_MolSys(tmp_item, atom_indices=atom_indices,
[32m     11[39m                                                   structure_indices=structure_indices, skip_digestion=[38;5;28;01mTrue[39;00m)
[32m     13[39m [38;5;28;01mreturn[39;00m tmp_item

[36mFile [39m[32m~/repos@uibcdf/molsysmt/molsysmt/_private/digestion/digest.py:52[39m, in [36mdigest.<locals>.digestor.<locals>.wrapper[39m[34m(*args, **kwargs)[39m
[32m     48[39m [38;5;129m@functools[39m.wraps(func)
[32m     49[39m [38;5;28;01mdef[39;00m[38;5;250m [39m[34mwrapper[39m(*args, **kwargs):
[32m     51[39m     [38;5;28;01mif[39;00m kwargs.get([33m'[39m[33mskip_digestion[39m[33m'[39m, [38;5;28;01mFalse[39;00m):
[32m---> [39m[32m52[39m         [38;5;28;01mreturn[39;00m [43mfunc[49m[43m([49m[43m*[49m[43margs[49m[43m,[49m[43m [49m[43m*[49m[43m*[49m[43mkwargs[49m[43m)[49m
[32m     54[39m     [38;5;66;03m# Define caller[39;00m
[32m     56[39m     caller = func.[34m__module__[39m+[33m'[39m[33m.[39m[33m'[39m+func.[34m__name__[39m

[36mFile [39m[32m~/repos@uibcdf/molsysmt/molsysmt/form/file_mmtf/to_mmtf_MMTFDecoder.py:9[39m, in [36mto_mmtf_MMTFDecoder[39m[34m(item, atom_indices, structure_indices, skip_digestion)[39m
[32m      6[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01mmmtf[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m parse
[32m      7[39m [38;5;28;01mfrom[39;00m[38;5;250m [39m[34;01m.[39;00m[34;01m.[39;00m[34;01mmmtf_MMTFDecoder[39;00m[38;5;250m [39m[38;5;28;01mimport[39;00m extract [38;5;28;01mas[39;00m extract_mmtf_MMTFDecoder
[32m----> [39m[32m9[39m tmp_item = [43mparse[49m[43m([49m[43mitem[49m[43m)[49m
[32m     10[39m tmp_item = extract_mmtf_MMTFDecoder(tmp_item, atom_indices=atom_indices,
[32m     11[39m                                     structure_indices=structure_indices, copy_if_all=[38;5;28;01mFalse[39;00m,
[32m     12[39m                                     skip_digestion=[38;5;28;01mTrue[39;00m)
[32m     14[39m [38;5;28;01mreturn[39;00m tmp_item

[36mFile [39m[32m/conda/miniconda3/envs/MolSysMT@uibcdf_3.12/lib/python3.12/site-packages/mmtf/api/default_api.py:93[39m, in [36mparse[39m[34m(file_path)[39m
[32m     88[39m [38;5;250m[39m[33;03m"""Return a decoded API to the data from a file path.[39;00m
[32m     89[39m 
[32m     90[39m [33;03m:param file_path: the input file path. Data is not entropy compressed (e.g. gzip)[39;00m
[32m     91[39m [33;03m:return an API to decoded data """[39;00m
[32m     92[39m newDecoder = MMTFDecoder()
[32m---> [39m[32m93[39m [38;5;28;01mwith[39;00m [38;5;28;43mopen[39;49m[43m([49m[43mfile_path[49m[43m,[49m[43m [49m[33;43m"[39;49m[33;43mrb[39;49m[33;43m"[39;49m[43m)[49m [38;5;28;01mas[39;00m fh:
[32m     94[39m     newDecoder.decode_data(_unpack(fh))
[32m     95[39m [38;5;28;01mreturn[39;00m newDecoder

[31mFileNotFoundError[39m: [Errno 2] No such file or directory: '/home/diego/repos@uibcdf/molsysmt/molsysmt/data/mmtf/1tcd.mmtf'

